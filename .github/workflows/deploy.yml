name: Deploy

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker image and push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          DJANGO_SECRET_KEY_BUILD=${{ secrets.DJANGO_SECRET_KEY_PROD }}
          DJANGO_DEBUG_BUILD=False
          DJANGO_ALLOWED_HOSTS_BUILD=localhost,127.0.0.1
    
    - name: Deploy locally (pull and run)
      run: |
        docker stop expense-tracker-CI || true
        docker rm expense-tracker-CI || true
        
        docker pull ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest
        
        docker run -d \
          --name expense-tracker-CI \
          -p 8000:8000 \
          --restart unless-stopped \
          -e DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY_PROD }} \
          -e DJANGO_DEBUG=False \
          -e DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1 \
          ${{ secrets.DOCKER_USERNAME }}/expense-tracker:latest
    
    - name: Wait for container to be ready
      run: |
        echo "Waiting for container to start..."
        sleep 10
        curl -f http://localhost:8000 || echo "Container might still be starting"
    
    - name: Show deployment info
      run: |
        echo "‚úÖ Deployment successful!"
        echo "üê≥ Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/expense-tracker"
        echo "üåê Application is running at: http://localhost:8000"
        echo "üìä Container status:"
        docker ps | grep expense-tracker
